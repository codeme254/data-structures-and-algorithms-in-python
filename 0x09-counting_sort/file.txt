does not do any comparison
counts the number of distinct characters
list = [1, 4, 1, 2, 7, 5, 2]

- step 1 - create a list of size 0-7 (7 is our largest value so it makes the "range"), the list can be filled with 0s
[0, 0, 0, 0, 0, 0, 0, 0]
-> starting at the first element, increment the frequency according to the index in the frequency array, which means for 1, we increment index 1 - [0, 1, 0, 0, 0, 0, 0, 0]
-> for 4, we increment index 4 - [0, 1, 0, 0, 1, 0, 0, 0]
-> for 1, we increment index 1 - [0, 2, 0, 0, 1, 0, 0, 0]
-> for 2, we increment index 2 - [0, 2, 1, 0, 1, 0, 0, 0]
-> for 7, we increment index 7 - [0, 2, 1, 0, 1, 0, 0, 1]
-> for 5, we increment index 5 - [0, 2, 1, 0, 1, 1, 0, 1]
-> for 2, we increment index 2 - [0, 2, 2, 0, 1, 1, 0, 1]

-> and here is our frequency array - [0, 2, 2, 0, 1, 1, 0, 1]

step 2 - pass through and get the value as per index for all indexes where element is greater than 0
our new sorted array -> []
at idx 0, list[0] = 0 so we don't do anything
at idx 1, list[1] = 2 so we add 2 1s to our sorted list -> [1, 1]
at idx 2, list[2] = 2 so we add 2 2s to our sorted list -> [1, 1, 2, 2]
at idx 3, list[3] = 0 so we don't do anything
at idx 4, list[4] = 1, so we add 1 4 to our sorted list -> [1, 1, 2, 2, 4]
at idx 5, list[5] = 1, so we add 1 5 to our sorted list -> [1, 1, 2, 2, 4, 5]
at idx 6, list[6] = 0 so we don't do anything
at idx 7 list[7] = 1 so we add 1 7 to our sorted list -> [1, 1, 2, 2, 4, 5, 7]

counting sort doesn't work with negative numbers
